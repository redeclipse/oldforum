
    // moderation / administration gui by bonifarz (cc-by-sa 4.0)
    // special thanks to calinou, acerspyro and shirepirate 
    // feel free to expand the scripts to your liking

    // first we define a new gui utility
    // might be included in /data/config/menu/glue.cfg ;)
    guisignedbitfield = [
        // similiar to a bitfield, but <var> can be negative, e.g. weaponmodes
        // right click toggles the sign of <var>
        // <var> assignment is without a =, as we use it for server vars.
        if (< $$arg2 0) [
            // make a bitfield for -<var>
            val = (* -1 $$arg2)
            if (& $val $arg3) [
                guibutton $arg1 [
                    @arg2 (* -1 (& @val (~ @arg3)))
                ] [
                    @arg2 (* -1 $@arg2) 
                ] "textures/checkboxtwo"
            ] [
                guibutton $arg1 [
                    @arg2 (* -1 (| @val @arg3))
                ] [
                    @arg2 (* -1 $@arg2) 
                ] "textures/checkbox"
            ]
        ] [
            // pretty much the same as guibitfield, but again with sign toggle
            if (& $$arg2 $arg3) [
                guibutton $arg1 [
                    @arg2 (& $@arg2 (~ @arg3))
                ] [
                    @arg2 (* -1 $@arg2) 
                ] "textures/checkboxon"
            ] [
                guibutton $arg1 [
                    @arg2 (| $@arg2 @arg3)
                ] [
                    @arg2 (* -1 $@arg2) 
                ] "textures/checkbox"
            ]
        ] 
    ]

    cnsel = -1
    adminpw = "hide"
    showbots = 1
    showprivs = 0
    conf = 1
    addservermotd = ""
    myservermotd = $servermotd

    getclientteamcolour = [
        case (getclientteam $arg1) 1 [
            clientteamcolour = $teamalphacolour
        ] 2 [
            clientteamcolour = $teamomegacolour
        ] 3 [
            clientteamcolour = $teamkappacolour
              
        ] 4 [
            clientteamcolour = $teamsigmacolour
        ] 0 [
            clientteamcolour = $teamneutralcolour
        ]
    ]
    getclienttex = [
        cond [ (isai $arg1)  ] [
            clienttex = $privbottex
        ] [ (&& (! $isonline) (= $arg1 (getclientnum))) ] [
            // if offline or if your client acts as a server
            // you have special privs, but you're not a creator ;)
            clienttex = "textures/info"
        ] [ (getclientpriv $arg1 7) ] [
            clienttex = $privcreatortex
        ] [ (getclientpriv $arg1 6) ] [
            clienttex = $privdevelopertex
        ] [ (getclientpriv $arg1 5) ] [
            clienttex = $privadministratortex
        ] [ (getclientpriv $arg1 4) ] [
            clienttex = $privoperatortex
        ] [ (getclientpriv $arg1 3) ] [
            clienttex = $privmoderatortex
        ] [ (getclientpriv $arg1 2) ] [
            clienttex = $privsupportertex
        ] [ (getclientpriv $arg1 1) ] [
            clienttex = $privplayertex
        ] [ (getclientpriv $arg1 0) ] [
            clienttex = $privnonetex
        ] 
    ]
    getclientstate = [
        // here we might add more info icons
        cond [ (isquarantine $arg1) ] [
            clientstate = $waitingtex
        ] [ (isspectator $arg1) ] [
            clientstate = $spectatortex
        ] [
            clientstate = $playertex
        ]
    ]
    getclientformat = [
        // this gives the formatted string for the radio buttons
        getclientstate $arg1 
        if ($showprivs) [ getclienttex $arg1 ] [ clienttex = "" ] 
        getclientteamcolour $arg1 
        clientformat = (format "^f[%1]^f(%2)^fw^f(%3)^f[%4]%5" (getclientcolour $arg1) $clientstate $clienttex $clientteamcolour (getclientname $arg1))
    ]
    confirm = [
        // depending on the checkbox $conf, commands are either passed to the console or just executed
        cmd = (concat $arg1 $arg2 $arg3 $arg4 $arg5)
        case $conf 1 [
            saycommand (concatword "/" $cmd)
        ] 0 [
            @cmd
        ] 
    ]
    
    newgui moderate [ guistayopen [
        guibackground 0x000000
        // store a list of client numbers for the current players
        if ($showbots) [
            cnlist = (listclients 1)
        ] [
            cnlist = []
            looplist  cn (listclients 1) [
                if  (! (isai $cn))  [
                    cnlist = (concat $cnlist $cn)
                ]
            ]
        ]
        // team counts
        guibar
        guilist [ 
            if (! (& (mutators) $mutsbitffa)) [
                t1 = 0 
                t2 = 0
                t3 = 0
                t4 = 0
                looplist cn $cnlist [
                    case (getclientteam $cn) 1 [
                        t1 = (+ $t1 1) 
                    ] 2 [
                        t2 = (+ $t2 1) 
                    ] 3 [
                        t3 = (+ $t3 1) 
                    ] 4 [
                        t4 = (+ $t4 1) 
                    ] 
                ]
                guitext "team counts: "
                guitext (format "^f[%1]^f(%2)%3  " $teamalphacolour $teamalphatex $t1)
                guitext (format "^f[%1]^f(%2)%3  " $teamomegacolour $teamomegatex $t2)
                if (& (mutators) $mutsbitmulti )[
                    guitext (format "^f[%1]^f(%2)%3  " $teamkappacolour $teamkappatex $t3)
                    guitext (format "^f[%1]^f(%2)%3  " $teamsigmacolour $teamsigmatex $t4)
                ]
                //guispring
                //guitext $t1 $teamalphatex  $teamalphacolour $teamalphacolour 
                //guispring
                //guitext $t2 $teamomegatex  $teamomegacolour $teamomegacolour 
                //guispring
                //if (& (mutators) $mutsbitmulti )[
                //    guitext $t3 $teamkappatex  $teamkappacolour $teamkappacolour 
                //    guispring
                //    guitext $t4 $teamsigmatex  $teamsigmacolour $teamsigmacolour 
                //    guispring
                //]
            ]
            guicheckbox "include bots  " showbots
            guicheckbox "confirm via console" conf 
            guicheckbox "show privs" showprivs 
        ]
        guispring ; guibar ; guispring
        guilist [
            // radio buttons for selecting players
            guispring
            guilist [
                guitext "selection"
                looplist cn $cnlist [
                    getclientformat $cn
                    guiradio $clientformat cnsel $cn
                ]
            ]
            guispring ; guibar ; guispring
            guilist [
                guitext "cn"
                looplist cn $cnlist [ guitext $cn  ]   
            ]
            guispring ; guibar ; guispring
            guilist [
                guitext "handle"
                looplist cn $cnlist [ guitext (getclienthandle $cn)  ]   
            ]
            guispring ; guibar ; guispring
            guilist [
                guitext "host (ip)"
                looplist cn $cnlist [ guitext (getclienthost $cn)  ]     
            ]
        guispring 
        ]
        if (! (isonline)) [
            guitext "Special privs: Client acts as server or is offline." "textures/info"
        ]
        guispring ; guibar ; guispring
        if (= $cnsel -1) [
            guitext "selected: Nobody" 
        ] [
            // options for bots and players, including yourself
            guilist [
                guispring
                getclientformat $cnsel
                guitext (concat "Selected player:" $clientformat)
                guispring
                if (! (& (mutators) $mutsbitffa)) [
                    guitext "change team: "
                    guibutton (format "^f[%1]^f(%2) " $teamalphacolour $teamalphatex) [confirm setteam $cnsel alpha]
                    guibutton (format "^f[%1]^f(%2) " $teamomegacolour $teamomegatex) [confirm setteam $cnsel omega]
                    if (& (mutators) $mutsbitmulti )[
                        guibutton (format "^f[%1]^f(%2) " $teamkappacolour $teamkappatex) [confirm setteam $cnsel kappa]
                        guibutton (format "^f[%1]^f(%2) " $teamsigmacolour $teamsigmatex) [confirm setteam $cnsel sigma]
                    ]
                    guibutton  "limit" [confirm limit $cnsel] [] $warningtex  
                    guispring
                ]
            ]
            cond [ (= $cnsel (getclientnum) ) ] [
                //guitext "You selected yourself."
            ] [ (isai $cnsel) ] [
                //guitext "You selected a bot."
            ] [
                // moderator actions that act on players only:
                guilist [
                    guispring
                    guibutton "Paste name to chat   " [saycommand  (getclientname $cnsel)  ] [] "textures/chat"
                    guibutton "Warn     " [saycommand "^fzay"(getclientname $cnsel)"^f(textures/hud/alert)" ] [] "textures/hud/alert"
                    guibutton "mute!   " [confirm mute $cnsel ] [] $chattex
                    guibutton "kick!   " [confirm kick $cnsel ] [] $meleetex
                    guibutton "ban!    " [confirm ban $cnsel ] [] $warningtex
                    guispring
                ]
                guilist [
                    guispring
                    guibutton "spectate & respawn  " [confirm spectator 1 $cnsel ] [] $spectatortex
                    guibutton "spectate in quarantine  " [confirm spectator 2 $cnsel ] [] $waitingtex
                    guibutton "end spectator  " [confirm spectator 0 $cnsel ] [] $playertex
                    guispring
                ]
            ]
        ]
        guibar
        guilist [
            guispring
            guitext "clear existing: "
            guibutton "limits " [clearlimits]  "" $waitingtex
            guibutton "mutes " [clearmutes] [] $chattex
            guibutton "bans " [clearbans]  "" $warningtex
            guispring
            if ($maxalive) [
                 guibutton "restore spawn limit" [maxalive 0]   [] $spectatortex
            ] [
                 guibutton "disable spawn limit" [maxalive 100] [] $moderesizetex
            ]
            guispring
        ]
        guilist [
            guispring
            guitext "reset:"
            guispring
            guibutton "vars" [resetvars]  [] $flagtex
            guispring
            guibutton "world vars" [resetworldvars]  [] $questiontex
            guispring
            guibutton "server config" [resetconfig]  [] $modeeditingtex 
            guispring
            guibutton "local ops" [resetlocalop]  [] $privmoderatortex
            guispring
            guispring
        ]
        guibar
        guitab bots
        guibar
        guilist [ 
            guilist [
                guibutton "^fgrecreate bots" [
                    mybotlimit = $botlimit
                    botlimit 0
                    sleep 100 [
                        botlimit $mybotlimit
                    ]
                ] [] $modedeathmatchtex
                if ($botspeed ) [ 
                    guibutton "freeze bots" [botspeed 0] [] $waitingtex
                ] [
                    guibutton "unfreeze bots" [botspeed 1] [] $modejetpacktex // $modefreestyletex
                ]
                guibutton "full skill" [botskillmin 101 ; botskillmax 101] [] $dominatedtex
                guibutton "default skill" [botskillmin 60 ; botskillmax 75] [] $dominatingtex
                guitext "bot behavior:"
                guiradio "normal" aipassive 0
                guiradio "only attack bots" aipassive 1
                guiradio "pacifist" aipassive 2
            ]
            guispring ; guibar ; guispring
            guilist [
                guitext "preferred weapon:"
                guiradio "random" aiforcegun -1  [] 
                loop j 5 [
                    wpn = (at $weapname $j)
                    guiradio $wpn aiforcegun $j  [] $(concatword $wpn "colour") 
                ]
            ]
            guilist [
                guitext ""
                loop i 6 [
                    j = (+ $i 5)
                    wpn = (at $weapname $j)
                    guiradio $wpn aiforcegun $j  [] $(concatword $wpn "colour") 
                ]
            ]
            guispring ; guibar ; guispring
            guilist [
                guilist [
                    guifield botspeed       4
                    guitext "^fa speed    "
                ]
                guilist [
                    guifield botscale      4
                    guitext "^fa scale size "
                ]
                guilist [
                    guifield botskillmin    4
                    guitext "^fa skillmin "
                ]
                guilist [
                    guifield botskillmax    4
                    guitext "^fa skillmax "
                ]
                //guilist [
                //    guifield aiforcegun     4
                //    guitext "^fa fav. gun "
                //]
                guilist [
                    guifield botbalance     4
                    guitext "^fa balance  "
                ]
                guilist [
                    guifield botoffset      4
                    guitext "^fa offset   "
                ]
                guilist [
                    guifield botlimit       4
                    guitext "^fa limit    "
                ]
            ]
        ]
        guibar
        guitab "voting"
        guibar
        guilist [
            guispring
            guilist [
                guilist [
                    guifield timelimit 3
                    guitext "time limit" $modetimetrialtex 
                    guitext " + overtime " 
                    guifield overtimelimit 1
                ]
                guilist [
                    guifield pointlimit 3
                    guitext "DM point limit:" $modedeathmatchtex
                ]
                guibar
                guitext "votes pass mid-match:"
                guiradio "never" votestyle 0
                guilist [
                    guiradio "when threshold is met: " votestyle 1
                    guifield votethreshold 4
                ]
                guiradio "only when unanimous" votestyle 2
                guibar
                guitext "intermission ends:"
                guilist [
                    guiradio "only after " voteinterm 0
                    guifield intermlimit 6
                    guitext " ms"
                ]
                guiradio "when threshold is met" voteinterm 1
                guiradio "only when unanimous" voteinterm 2
            ]
            guispring ; guibar ; guispring
            guilist [
                guitext "allowed modes:"
                loop i $modeidxnum [ 
                    guibitfield (at $modeidxname $i) modelockfilter (<< 1 $i)
                ]
            ]
            guispring
            guibar
            guispring
            guilist [
                guitext "allowed mutators:"
                loop i 7 [
                    guibitfield (at $mutsidxname $i) mutslockfilter (<< 1 $i)
                ]
            ]
            guispring
            guilist [
                guitext ""
                loop j (- $mutsidxnum $mutsidxgsn 7) [
                    i = (+ 7 $j)
                    guibitfield (at $mutsidxname $i) mutslockfilter (<< 1 $i)
                ]
            ]
        ]
        guibar
        guispring
        guitab "weapons"
        guibar
        guilist [
            guispring
            guitext "" 
            guispring
            guitext "specific weapons" 
            guispring 
            guitext "(dis)allowed per mode (r-click to toggle the sign)"
            guispring
        ]
        guilist [
            guilist [ 
               guitext ""
               looplist j $weapname [
                   guitext $j $(concatword $j "tex") $(concatword $j "colour")
               ]
            ]
            guispring
            guilist [
                guitext "spawn"
                loop j $weapidxnum [
                    guiradio "" spawnweapon  $j 
                ]
            ]
            guispring
            guilist [
                guitext "insta"
                loop j $weapidxnum [
                    guiradio "" instaweapon  $j 
                ]
            ]
            guispring
            guilist [
                guitext "trial"
                loop j $weapidxnum [
                    guiradio "" trialweapon  $j 
                ]
            ]
            guispring 
            loop i $modeidxnum [
               guispring
               guilist [
                   if (= $i $modeidxdeathmatch) [
                       guitext "dm    "
                   ] [
                       guitext (at $modeidxname $i) 
                   ] 
                   looplist j $weapname [
                       guisignedbitfield "" (format "%1modes" $j) (<< 1 $i)
                   ]
               ]
           ]
        ]
        guibar
        guitab "server"
        guibar
        guitext "description for server list: (Cancel editing with Esc)"
        guifield serverdesc  80 
        guitext "server motd (login message):"
        guifield servermotd -80 
        guilist [ 
            guispring
            guibutton "copy current motd" [ myservermotd = $servermotd]
            guispring
            guibutton "load copied motd" [servermotd  $msyervermotd]
            guispring
            guitext "append below line to the motd:"
            guispring
        ]
        guifield addservermotd 80 [
            servermotd (concat $servermotd "^n" $addservermotd)
            addservermotd = ""
        ]
        guispring ; guibar ; guispring
        guilist [
            guilist [
                guibutton "regular server mode"    [mastermode 0] [] "textures/servers/default"
                guibutton "voting with veto"    [mastermode 1] [] "textures/servers/default"
                guibutton "spectators are locked"  [mastermode 2] [] "textures/servers/locked"
                guilist [
                    if (strlen $serverpass) [
                        guibutton "disable login password: " [serverpass ""] [] "textures/servers/private"
                    ] [
                        guitext "set a login password: " "textures/servers/private"
                    ]
                    guifield serverpass 10
                ]
                guibutton "locked (if password is empty)" [mastermode 3] [] "textures/servers/failed"
            ]
            if (! (isonline)) [
            guispring ; guibar ; guispring
                guilist [
                    guitext "Use your client as:"
                    guiradio "private server" servertype 1
                    guiradio "public server" servertype 2
                    guiradio "dedicated server" servertype 3
                    guiradio "none of the above" servertype 0
                ]
            ]
            guispring ; guibar ; guispring
            guilist [
                guibutton "^falanconnect" [lanconnect] [] $bliptex
                guibutton "^fwenter adminpass" [
                    adminpw = ""
                ] [] "textures/privs/administrator"
                if (strcmp $adminpw "") [
                //  guitext "password: " // this causes an errous tab
                    guifield adminpw 15 [
                        setpriv $adminpw
                    ]
                ]
                guibutton "^fadump all vars" [writevars "vardump.cfg" 1 ]  [] $modeeditingtex
                guibutton "^fwopen local (log-)file" [notepad servlog.txt] [] $inputtex
                guibutton "^farelinquish priv." [setpriv 0]  [] $insigniatex
            ]
        ]
        guibar
    ] ]

    showgui moderate


